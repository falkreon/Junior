buildscript {
	repositories {
		mavenCentral();
		jcenter();
		maven {
			name = "sonatype";
			url = "https://oss.sonatype.org/content/repositories/snapshots/";
		}
		maven {
			url "https://plugins.gradle.org/m2/";
		}
	}
	dependencies {
		classpath "gradle.plugin.net.minecrell:licenser:0.3";
	}
}

apply plugin: "java";
apply plugin: "net.minecrell.licenser";
apply plugin: "eclipse";
apply plugin: "maven-publish";
apply plugin: "signing";

group = "blue.endless";
archivesBaseName = "Junior";
version = "0.0.1";

sourceCompatibility = 1.8;
targetCompatibility = 1.8;

repositories {
	jcenter()
	mavenCentral()
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = "javadoc"
	from javadoc.destinationDir
}

def versionSuffix = ''
if (System.env.BUILD_NUMBER) {
	versionSuffix = '-'+System.env.BUILD_NUMBER;
}

publishing {
	publications {
		mavenPrimary(MavenPublication) {
			from components.java;

			groupId project.group;
			artifactId "junior";
			version project.version+versionSuffix;
			artifact sourcesJar;
			artifact javadocJar;
			
			pom {
				name = "Junior";
				description = "Fun with Abstract Syntax Trees!";
				url = "https://github.com/falkreon/Junior";
				
				developers {
					developer {
						id = "falkreon"
						name = "Isaac Ellingson"
						email = "falkreon@gmail.com"
					}
				}
				
				licenses {
					license {
						name = "Mozilla Public License 2.0"
						url = "https://mozilla.org/MPL/2.0/"
						distribution = "repo"
					}
				}
				
				scm {
					url = "https://github.com/falkreon/Junior"
					connection = "scm:git:git@github.com:falkreon/Junior.git"
					developerConnection = "scm:git:git@github.com:falkreon/Junior.git"
				}
			}
		}
	}
	
	repositories {
		if (project.hasProperty("ossrhUsername")) {
			maven {
				def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
				def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
				url = releasesRepoUrl;
				
				credentials {
					username = ossrhUsername
					password = ossrhPassword
				}
				
			}
		}
	}
}

defaultTasks "clean", "build", "sourcesJar";

dependencies {
	testCompile "junit:junit:4.12";
	
	compileOnly 'org.slf4j:slf4j-api:1.7.9';
	compileOnly 'org.checkerframework:checker-qual:2.5.6';
}

signing {
	if (project.hasProperty("signing.keyId")) {
		sign configurations.archives;
		sign publishing.publications.mavenPrimary
	} else {
		//Skip
	}
}

license {
	header = project.file('HEADER')
}
